#include <iostream>
#include <algorithm>
using namespace std;

#define MAX 501

int buf[MAX][MAX];
int dp[MAX][MAX];

int main()
{
  int n;
  cin >> n;
  for (int i = 1; i <= n; i++)
  {
    for (int j = 1; j <= i; j++)
    {
      cin >> buf[i][j];
    }
  }

  dp[1][1] = buf[1][1];

  for (int i = 2; i <= n; i++)
  {
    for (int j = 1; j <= i; j++)
    {
      if (j == 1)
        dp[i][j] = buf[i][j] + dp[i - 1][j];
      else if (j == i)
        dp[i][j] = buf[i][j] + dp[i - 1][j - 1];
      else
        dp[i][j] = buf[i][j] + max(dp[i - 1][j - 1], dp[i - 1][j]);// 점화식
    }
  }

  int result = 0;
  for (int i = 1; i <= n; i++)
  {
    if (result < dp[n][i])
      result = dp[n][i];
  }
  cout << result << '\n';
}
