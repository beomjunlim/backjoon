#include <iostream>
#include <algorithm>
using namespace std;

#define MAX 100001

int dp[2][MAX];
int map[2][MAX];

int main()
{
  ios::sync_with_stdio(false);
  cin.tie(0);
  cout.tie(0);
  int T;
  cin >> T;
  while (T > 0)
  {
    int n;
    cin >> n;
    for (int i = 0; i < 2; i++)
    {
      for (int j = 0; j < n; j++)
      {
        cin >> map[i][j];
      }
    }
    dp[0][0] = map[0][0];
    dp[1][0] = map[1][0];
    dp[0][1] = map[0][1] + dp[1][0];
    dp[1][1] = map[1][1] + dp[0][0];// 인덱스 1번까지 dp 배열 업데이트

    for (int i = 2; i < n; i++)
    {
      dp[0][i] = map[0][i] + max(dp[1][i - 1], dp[1][i - 2]);
      dp[1][i] = map[1][i] + max(dp[0][i - 1], dp[0][i - 2]);// 점화식
    }
    cout << max(dp[0][n - 1], dp[1][n - 1]) << '\n';
    T--;
  }
}
