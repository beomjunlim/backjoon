#include<iostream>
#include<queue>
using namespace std;

int n, m;
int graph[100][100];
int dx[] = { 0,0,-1,1 };
int dy[] = { -1,1,0,0 };

int bfs(int x, int y) {
	queue<pair<int, int>>q;
	q.push({ x,y });
	while (!q.empty()) {
		int nx = q.front().first;
		int ny = q.front().second;
		q.pop();
		for (int i = 0; i < 4; i++) {
			if (nx + dx[i] < 0 || nx + dx[i] >= n || ny + dy[i] < 0 || ny + dy[i] >= m) continue;
			if (graph[nx + dx[i]][ny + dy[i]] == 0) continue;
			if (graph[nx + dx[i]][ny + dy[i]] == 1) {
				graph[nx + dx[i]][ny + dy[i]] = graph[nx][ny] + 1;//이전 위치의 정보에 다음칸까지 가는 수
				q.push({ nx + dx[i],ny + dy[i] });//큐에 
			}
		}
	}
	return graph[n - 1][m - 1];
}
int main() {
	cin >> n >> m;
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			scanf_s("%1d", &graph[i][j]);
		}
	}
	cout << bfs(0, 0);
}
