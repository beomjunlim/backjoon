#include <iostream>
#include <algorithm>
using namespace std;

#define MAX 10001

int buf[MAX];
int dp[MAX][3];

int main()
{
  int n;
  cin >> n;
  for (int i = 1; i <= n; i++)
  {
    cin >> buf[i];
  }
  dp[1][0] = 0;
  dp[1][1] = buf[1];

  for (int i = 2; i <= n; i++)
  {
    if (i == 2)
    {
      dp[i][0] = max(dp[i - 1][0], dp[i - 1][1]);// 두번째 의 경우 연속 2번인 경우가 없으므로
      dp[i][1] = buf[i] + dp[i - 1][0];
      dp[i][2] = buf[i] + dp[i - 1][1];
    }
    else
    {
      dp[i][0] = max(dp[i - 1][2], max(dp[i - 1][0], dp[i - 1][1]));// 연속 2번, 1번 0번의 경우 중 큰 경우로 업데이트
      dp[i][1] = buf[i] + dp[i - 1][0];
      dp[i][2] = buf[i] + dp[i - 1][1];
    }
  }
  cout << max(dp[n][2], max(dp[n][1], dp[n][0])) << '\n';// n번째까지 실행한 후 연속0,1,2 중 가장 큰 값
}
