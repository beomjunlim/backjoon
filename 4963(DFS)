#include<iostream>
#include<vector>
using namespace std;

int w, h;
int graph[50][50];
int dx[] = { 0,0,1,1,1,-1,-1,-1 };
int dy[] = { -1,1,0,-1,1,0,-1,1 };//이동 가능한 경우의 수 8

void dfs(int x, int y) {
	graph[x][y] = 0;//방문한 경우 바다로 바꿔 버림
	for (int i = 0; i < 8; i++) {
		int nx = x + dx[i];
		int ny = y + dy[i];
		if (nx < 0 || nx >= h || ny < 0 || ny >= w) continue;
		if (graph[nx][ny] == 1) {
			dfs(nx, ny);
		}
	}
}
int main() {
	vector<int>v;
	while (1) {
		int island = 0;
		cin >> w >> h;
		if (w == 0 && h == 0) break;//너비 높이가 모두 0일 경우 while문 종료
		for (int i = 0; i < h; i++) {
			for (int j = 0; j < w; j++) {
				cin >> graph[i][j];
			}
		}
		for (int i = 0; i < h; i++) {
			for (int j = 0; j < w; j++) {
				if (graph[i][j] == 1) {
					dfs(i, j);
					island++;
				}
			}
		}
		v.push_back(island);
	}
	for (int i = 0; i < v.size(); i++) {
		cout << v[i] << '\n';
	}
}
